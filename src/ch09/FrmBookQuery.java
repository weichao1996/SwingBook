/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ch09;

import java.awt.Rectangle;
import java.util.Vector;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author wei__chao
 */
public class FrmBookQuery extends javax.swing.JFrame {
    Vector data;
    Vector title;
    //带滚动条的面板
    JScrollPane scp=new JScrollPane();
    //表格模式
    DefaultTableModel dtm=new DefaultTableModel();
    //表格
    JTable tbl=new JTable(dtm);
    /**
     * Creates new form FrmBookQuery
     */
    public FrmBookQuery() {
        initComponents();
        data=DBCon.queryVectorData("Select * from Book");
        title=new Vector();
        //准备表头
        title.add("图书编号");
        title.add("图书名称");
        title.add("作者");
        title.add("出版社");
        title.add("出版社日期");
        title.add("在库状态");

        //放置表格到滚动面板上
        scp.setViewportView(tbl);
        
        //设置位置和大小
        scp.setBounds(new Rectangle(10,180,350,170));
        this.getContentPane().add(scp);
        showTableData();
    }
        //在表格中显示数据的方法
    public void showTableData(){
        //利用表格模式显示数据
        dtm.setDataVector(data, title);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpStatus = new javax.swing.ButtonGroup();
        lblBookID = new javax.swing.JLabel();
        txtBookID = new javax.swing.JTextField();
        lblBookName = new javax.swing.JLabel();
        txtBookName = new javax.swing.JTextField();
        lblAuthor = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        lblPress = new javax.swing.JLabel();
        txtPress = new javax.swing.JTextField();
        lblPressDate1 = new javax.swing.JLabel();
        txtPressDate1 = new javax.swing.JTextField();
        lblPressDate2 = new javax.swing.JLabel();
        txtPressDate2 = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        radIn = new javax.swing.JRadioButton();
        radOut = new javax.swing.JRadioButton();
        radUnlim = new javax.swing.JRadioButton();
        btnQuery = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("图书信息查询");

        lblBookID.setText("图书编号");

        lblBookName.setText("图书名称");

        lblAuthor.setText("作    者");

        lblPress.setText("出版社");

        lblPressDate1.setText("出版日期");

        lblPressDate2.setText("至");

        lblStatus.setText("在库状态");

        btngrpStatus.add(radIn);
        radIn.setText("在库");

        btngrpStatus.add(radOut);
        radOut.setText("借出");

        btngrpStatus.add(radUnlim);
        radUnlim.setText("不限");

        btnQuery.setText("查询");
        btnQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQueryActionPerformed(evt);
            }
        });

        btnReturn.setText("返回");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBookName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPressDate1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPressDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblAuthor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAuthor))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblBookID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBookID))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radIn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radOut)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPress)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(lblPressDate2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtPressDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtPress)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radUnlim)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnQuery)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnReturn)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBookID)
                    .addComponent(txtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBookName)
                    .addComponent(txtBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAuthor)
                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPress)
                    .addComponent(txtPress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPressDate1)
                    .addComponent(txtPressDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPressDate2)
                    .addComponent(txtPressDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus)
                    .addComponent(radIn)
                    .addComponent(radOut)
                    .addComponent(radUnlim)
                    .addComponent(btnQuery)
                    .addComponent(btnReturn))
                .addContainerGap(189, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQueryActionPerformed
        //获得用户设置的查询条件
        String BookID=txtBookID.getText();
        String BookName=txtBookName.getText();
        String Author=txtAuthor.getText();
        String Press=txtPress.getText();
        String PressDate1=txtPressDate1.getText();
        String PressDate2=txtPressDate2.getText();
        String Status="";
        if(radIn.isSelected()){
            Status="在库";
        }else if(radOut.isSelected()){
            Status="借出";
        }
        
        //SQL语句
        String sql="Select * from Book";
        String query="";
        if(BookID.length()>0){
            query="BookID like '%"+BookID+"%'";
        }
        if(BookName.length()>0){
            if(query.length()>0)
                query=query+ "and BookName like '%"+BookName+"%'";
            else
                query="BookName like '%"+BookName+"%'";
        }
        if(Author.length()>0){
            if(query.length()>0)
                query=query+ "and Author like '%"+Author+"%'";
            else
                query="Author like '%"+Author+"%'";
        }
        if(Press.length()>0){
            if(query.length()>0)
                query=query+ "and Press like '%"+Press+"%'";
            else
                query="Press like '%"+Press+"%'";
        }
        if(Status.length()>0){
            if(query.length()>0)
                query=query+"and Status='"+Status+"'";
            else
                query="Status='"+Status+"'";
        }
        if(PressDate1.length()>0 && PressDate2.length()==0){
            if(query.length()>0)
                query=query+"and PressDate>='"+PressDate1+"'";
            else
                query="PressDate>='"+PressDate1+"'";
        }else if(PressDate1.length()==0 && PressDate2.length()>0){
            if(query.length()>0)
                query=query+"and PressDate<='"+PressDate2+"'";
            else
                query="PressDate<='"+PressDate2+"'";
        }else if(PressDate1.length()>0 && PressDate2.length()>0){
            if(query.length()>0)
                query=query+"and PressDate>='"+PressDate1+"' and PressDate<='"+PressDate2+"'";
            else
                query="PressDate>='"+PressDate1+"' and PressDate<='"+PressDate2+"'";
        }
        
        //形成最终的SQL语句
        if(query.length()>0){
            sql=sql+" where "+query;
        }
        System.out.println(sql);
        //执行查询
        data=DBCon.queryVectorData(sql);
        dtm.setDataVector(data, title);
    }//GEN-LAST:event_btnQueryActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        FrmBook frame=new FrmBook();
        frame.setSize(413,430);
        frame.setVisible(true);
        //关闭当前窗体
        this.dispose();
    }//GEN-LAST:event_btnReturnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmBookQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmBookQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmBookQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmBookQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmBookQuery().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQuery;
    private javax.swing.JButton btnReturn;
    private javax.swing.ButtonGroup btngrpStatus;
    private javax.swing.JLabel lblAuthor;
    private javax.swing.JLabel lblBookID;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblPress;
    private javax.swing.JLabel lblPressDate1;
    private javax.swing.JLabel lblPressDate2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JRadioButton radIn;
    private javax.swing.JRadioButton radOut;
    private javax.swing.JRadioButton radUnlim;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookID;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JTextField txtPress;
    private javax.swing.JTextField txtPressDate1;
    private javax.swing.JTextField txtPressDate2;
    // End of variables declaration//GEN-END:variables
}
